// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package br.ufrn.imd.sid;

public final class RemotePalitinhosImpl_Stub
    extends java.rmi.server.RemoteStub
    implements br.ufrn.imd.sid.RemotePalitinhos, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addJogadores_0;
    private static java.lang.reflect.Method $method_adicionaPalito_1;
    private static java.lang.reflect.Method $method_quantPalitinhos_2;
    private static java.lang.reflect.Method $method_retiraPalito_3;
    private static java.lang.reflect.Method $method_totalPalitinhos_4;
    
    static {
	try {
	    $method_addJogadores_0 = br.ufrn.imd.sid.RemotePalitinhos.class.getMethod("addJogadores", new java.lang.Class[] {java.lang.String.class});
	    $method_adicionaPalito_1 = br.ufrn.imd.sid.RemotePalitinhos.class.getMethod("adicionaPalito", new java.lang.Class[] {});
	    $method_quantPalitinhos_2 = br.ufrn.imd.sid.RemotePalitinhos.class.getMethod("quantPalitinhos", new java.lang.Class[] {java.lang.String.class, int.class});
	    $method_retiraPalito_3 = br.ufrn.imd.sid.RemotePalitinhos.class.getMethod("retiraPalito", new java.lang.Class[] {});
	    $method_totalPalitinhos_4 = br.ufrn.imd.sid.RemotePalitinhos.class.getMethod("totalPalitinhos", new java.lang.Class[] {java.lang.String.class, int.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemotePalitinhosImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addJogadores(String)
    public void addJogadores(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addJogadores_0, new java.lang.Object[] {$param_String_1}, 4356066645158175444L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of adicionaPalito()
    public void adicionaPalito()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_adicionaPalito_1, null, -3600344397046033122L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of quantPalitinhos(String, int)
    public void quantPalitinhos(java.lang.String $param_String_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_quantPalitinhos_2, new java.lang.Object[] {$param_String_1, new java.lang.Integer($param_int_2)}, -3803743103094531458L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of retiraPalito()
    public void retiraPalito()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_retiraPalito_3, null, -2955838919091546945L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of totalPalitinhos(String, int)
    public void totalPalitinhos(java.lang.String $param_String_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_totalPalitinhos_4, new java.lang.Object[] {$param_String_1, new java.lang.Integer($param_int_2)}, 8610946157353186023L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
